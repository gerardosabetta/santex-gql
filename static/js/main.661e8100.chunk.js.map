{"version":3,"sources":["graphql/queries.ts","constants.ts","utils.ts","components/Header.tsx","components/Pagination.tsx","components/SearchBar.tsx","components/Container.tsx","components/Spinner.tsx","components/NoResults.tsx","components/ResultsGrid.tsx","components/Facet.tsx","components/FacetList.tsx","graphql/mutations.ts","components/ProductList.tsx","components/SortSelect.tsx","hooks/useDebounce.ts","App.tsx","reportWebVitals.ts","globalStyles.ts","index.tsx"],"names":["SEARCH_PRODUCTS","gql","GET_ACTIVE_ORDER","SORTING_OPTIONS","displayName","value","name","price","usdFormatter","Intl","NumberFormat","style","currency","Logo","styled","img","Header","header","OrderTotal","div","StyledHeader","options","data","useQuery","total","format","activeOrder","subTotal","src","alt","data-testid","Pagination","currentPage","totalPages","handleNextPage","handlePreviousPage","className","PaginationButton","onClick","disabled","aria-label","button","props","SearchBar","term","onSearch","onChange","e","target","Container","Spinner","NoResults","ResultsGrid","Facet","label","FacetList","facetValues","facetValueIds","setFacetValueIds","map","facetValue","count","type","checked","includes","id","filter","ADD_TO_CART","ProductsContainer","section","ProductCard","item","useMutation","refetchQueries","query","addToCart","loading","ProductImage","productAsset","preview","productVariantName","ProductDetails","ProductTitle","ProductDescription","description","ProductPrice","ProductButton","variables","productVariantId","quantity","h3","p","ProductList","items","SortSelect","sort","setSort","find","option","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","App","setTerm","skip","setSkip","deferredTerm","take","Math","ceil","search","totalItems","searchValue","placeholder","ids","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","commerceLink","createHttpLink","uri","addAuthHeader","ApolloLink","operation","forward","token","localStorage","getItem","setContext","headers","Authorization","afterwareLink","response","authHeader","getContext","get","setItem","client","ApolloClient","cache","InMemoryCache","link","from","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.661e8100.chunk.js","sourcesContent":["import { QueryHookOptions, gql, useQuery } from '@apollo/client';\nimport { ActiveOrderResult, SearchResponse } from '../generated/types';\n\nexport const SEARCH_PRODUCTS = gql`\n  query SearchProducts(\n    $term: String\n    $take: Int\n    $skip: Int\n    $facetValueIds: [ID!]\n    $sort: SearchResultSortParameter\n  ) {\n    search(\n      input: {\n        term: $term\n        take: $take\n        skip: $skip\n        sort: $sort\n        facetValueIds: $facetValueIds\n        facetValueOperator: AND\n      }\n    ) {\n      items {\n        productId\n        productName\n        description\n        productVariantName\n        productVariantId\n        productAsset {\n          preview\n        }\n        description\n        price {\n          __typename\n          ... on SinglePrice {\n            value\n          }\n          ... on PriceRange {\n            min\n            max\n          }\n        }\n      }\n      facetValues {\n        facetValue {\n          id\n          name\n        }\n        count\n      }\n\n      totalItems\n    }\n  }\n`;\n\nexport const useSearchProductsQuery = (options: QueryHookOptions) => {\n  return useQuery<{\n    search: SearchResponse;\n  }>(SEARCH_PRODUCTS, options);\n};\n\nexport const GET_ACTIVE_ORDER = gql`\n  query GetActiveOrder {\n    activeOrder {\n      lines {\n        id\n        productVariant {\n          name\n          price\n        }\n        quantity\n      }\n      subTotal\n    }\n  }\n`;\n\nexport const useGetActiveOrderQuery = (options?: QueryHookOptions) => {\n  return useQuery<{\n    activeOrder: ActiveOrderResult;\n  }>(GET_ACTIVE_ORDER, options);\n};\n","export const PAGE_SIZE = 10;\n\ninterface SortingOption {\n  displayName: string;\n  value: { name?: 'ASC' | 'DESC'; price?: 'ASC' | 'DESC' };\n}\n\nexport const SORTING_OPTIONS: SortingOption[] = [\n  {\n    displayName: 'A-Z',\n    value: {\n      name: 'ASC',\n    },\n  },\n  {\n    displayName: 'Z-A',\n    value: {\n      name: 'DESC',\n    },\n  },\n  {\n    displayName: 'Price (lowest)',\n    value: {\n      price: 'ASC',\n    },\n  },\n  {\n    displayName: 'Price (highest)',\n    value: {\n      price: 'DESC',\n    },\n  },\n];\n","export const usdFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n});\n","import styled from 'styled-components';\nimport { useGetActiveOrderQuery } from '../graphql/queries';\nimport { Order } from '../generated/types';\nimport { usdFormatter } from '../utils';\n\nconst Logo = styled.img`\n  width: 80px;\n  padding: 10px;\n`;\n\nconst Header = styled.header`\n  background: #03045e;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n`;\n\nconst OrderTotal = styled.div`\n  color: white;\n`;\n\nconst StyledHeader = () => {\n  const { data } = useGetActiveOrderQuery();\n\n  const total = usdFormatter.format(\n    (data?.activeOrder as Order)?.subTotal || 0\n  );\n  return (\n    <Header>\n      <Logo\n        src=\"https://santex.wpengine.com/wp-content/uploads/2019/02/logo-santex@3x.png\"\n        alt=\"logo\"\n      />\n\n      <OrderTotal data-testid=\"order-total\">Order total: {total}</OrderTotal>\n    </Header>\n  );\n};\n\nexport default StyledHeader;\n","import styled from 'styled-components';\n\ntype Props = {\n  currentPage: number;\n  totalPages: number;\n  handleNextPage: () => void;\n  handlePreviousPage: () => void;\n  className?: string;\n};\n\nconst Pagination = styled(\n  ({\n    currentPage,\n    totalPages,\n    handleNextPage,\n    handlePreviousPage,\n    className,\n  }: Props) => {\n    return (\n      <div className={className}>\n        <PaginationButton\n          onClick={handlePreviousPage}\n          disabled={currentPage === 1}\n          aria-label=\"Previous page\"\n        >\n          &lt;\n        </PaginationButton>\n        Page {currentPage} of {totalPages}\n        <PaginationButton\n          onClick={handleNextPage}\n          disabled={currentPage === totalPages}\n          aria-label=\"Next page\"\n        >\n          &gt;\n        </PaginationButton>\n      </div>\n    );\n  }\n)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 1rem 0;\n`;\n\nconst PaginationButton = styled.button`\n  border: none;\n  background: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n  padding: 0.5rem;\n  margin: 0 0.5rem;\n  color: #333;\n  ${(props: { disabled: boolean }) => {\n    if (props.disabled) {\n      return `\n        opacity: 0.5;\n        cursor: not-allowed;\n      `;\n    }\n  }}\n`;\n\nexport default Pagination;\n","import styled from 'styled-components';\n\ntype Props = {\n  className?: string;\n  term: string;\n  onSearch: (term: string) => void;\n} & React.InputHTMLAttributes<HTMLInputElement>;\n\nconst SearchBar = styled(({ className, term, onSearch, ...props }: Props) => {\n  return (\n    <input\n      className={className}\n      value={term}\n      onChange={(e) => onSearch(e.target.value)}\n      data-testid=\"search-bar\"\n      {...props}\n    />\n  );\n})`\n  width: 100%;\n  padding: 1rem;\n  font-size: 1.5rem;\n  margin: 1rem 0;\n  box-sizing: border-box;\n  outline: none;\n`;\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 1rem;\n`;\n\nexport default Container;\n","import styled from 'styled-components';\n\nconst Spinner = styled.div`\n  border: 5px solid #f3f3f3;\n  border-top: 5px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 2s linear infinite;\n  margin: 0 auto;\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default Spinner;\n","import styled from 'styled-components';\n\nconst NoResults = styled.div`\n  text-align: center;\n  font-size: 2rem;\n  margin: 2rem;\n`;\n\nexport default NoResults;\n","import styled from 'styled-components';\n\nconst ResultsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n\n  @media (max-width: 768px) {\n    grid-template-columns: minmax(200px, 1fr) 2fr;\n  }\n\n  @media (max-width: 480px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport default ResultsGrid;\n","import styled from 'styled-components';\n\nconst Facet = styled.label`\n  display: block;\n  margin-bottom: 1rem;\n  margin-top: 1rem;\n  cursor: pointer;\n`;\n\nexport default Facet;\n","import Facet from './Facet';\nimport { FacetValueResult } from '../generated/types';\n\ntype Props = {\n  facetValues: FacetValueResult[];\n  facetValueIds: string[];\n  setFacetValueIds: (ids: string[]) => void;\n};\nconst FacetList = ({ facetValues, facetValueIds, setFacetValueIds }: Props) => {\n  return (\n    <>\n      {facetValues.map(({ facetValue, count }) => {\n        return (\n          <Facet data-testid=\"facet\" key={facetValue.id}>\n            <input\n              type=\"checkbox\"\n              checked={facetValueIds.includes(facetValue.id)}\n              onChange={(e) => {\n                if (e.target.checked) {\n                  setFacetValueIds([...facetValueIds, facetValue.id]);\n                } else {\n                  setFacetValueIds(\n                    facetValueIds.filter((id) => id !== facetValue.id)\n                  );\n                }\n              }}\n            />\n            {facetValue.name} ({count})\n          </Facet>\n        );\n      })}\n    </>\n  );\n};\n\nexport default FacetList;\n","import { gql, useMutation } from '@apollo/client';\nimport { GET_ACTIVE_ORDER } from './queries';\n\nconst ADD_TO_CART = gql`\n  mutation AddToCart($productVariantId: ID!, $quantity: Int!) {\n    addItemToOrder(productVariantId: $productVariantId, quantity: $quantity) {\n      ... on Order {\n        id\n      }\n    }\n  }\n`;\n\nexport const useAddToCartMutation = () => {\n  return useMutation(ADD_TO_CART, {\n    refetchQueries: [{ query: GET_ACTIVE_ORDER }],\n  });\n};\n","import styled from 'styled-components';\nimport { useAddToCartMutation } from '../graphql/mutations';\nimport { SearchResult, SinglePrice } from '../generated/types';\nimport Spinner from './Spinner';\nimport { usdFormatter } from '../utils';\n\ntype Props = {\n  items: SearchResult[];\n};\n\nconst ProductList = ({ items }: Props) => {\n  return (\n    <ProductsContainer>\n      {items.map((item) => {\n        return <ProductCard item={item} key={item.productVariantId} />;\n      })}\n    </ProductsContainer>\n  );\n};\n\nconst ProductsContainer = styled.section`\n  display: grid;\n  grid-gap: 1rem;\n`;\n\nexport const ProductCard = styled(\n  ({ className, item }: { className?: string; item: SearchResult }) => {\n    const [addToCart, { loading }] = useAddToCartMutation();\n\n    const price = usdFormatter.format((item.price as SinglePrice).value);\n    return (\n      <article data-testid=\"product-card\" className={className}>\n        <ProductImage\n          src={item.productAsset?.preview}\n          alt={item.productVariantName}\n        />\n        <ProductDetails>\n          <ProductTitle>{item.productVariantName}</ProductTitle>\n          <ProductDescription>{item.description}</ProductDescription>\n          <ProductPrice> {price}</ProductPrice>\n        </ProductDetails>\n        <ProductButton\n          onClick={() => {\n            if (loading) return;\n            addToCart({\n              variables: {\n                productVariantId: item.productVariantId,\n                quantity: 1,\n              },\n            });\n          }}\n        >\n          {loading ? <Spinner /> : <span>Add to cart</span>}\n        </ProductButton>\n      </article>\n    );\n  }\n)`\n  display: grid;\n  grid-template-columns: minmax(200px, 1fr) 3fr 1fr;\n  grid-template-rows: 200px;\n  border: 1px solid #ccc;\n  border-radius: 16px;\n  overflow: hidden;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 200px 2fr 1fr;\n  }\n`;\n\nconst ProductImage = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n`;\n\nconst ProductDetails = styled.div`\n  padding: 1rem;\n`;\n\nconst ProductTitle = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin: 0 0 0.5rem 0;\n`;\n\nconst ProductDescription = styled.p`\n  font-size: 1rem;\n  font-weight: 400;\n  margin: 0;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nconst ProductPrice = styled.p`\n  font-size: 1rem;\n  font-weight: 500;\n  margin: 0;\n  color: #333;\n`;\n\nconst ProductButton = styled.button`\n  width: 100%;\n  height: 100%;\n  border: none;\n  background: #0077b6;\n  color: white;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n`;\n\nexport default ProductList;\n","import styled from 'styled-components';\nimport { SORTING_OPTIONS } from '../constants';\n\ntype Props = {\n  sort: typeof SORTING_OPTIONS[0];\n  setSort: (sort: typeof SORTING_OPTIONS[0]) => void;\n  className?: string;\n} & React.SelectHTMLAttributes<HTMLSelectElement>;\n\nconst SortSelect = styled(({ sort, setSort, className, ...props }: Props) => {\n  return (\n    <select\n      className={className}\n      value={sort.displayName}\n      onChange={(e) => {\n        setSort(\n          SORTING_OPTIONS.find(\n            (option) => option.displayName === e.target.value\n          ) as typeof SORTING_OPTIONS[0]\n        );\n      }}\n      {...props}\n    >\n      {SORTING_OPTIONS.map((option) => {\n        return (\n          <option key={option.displayName} value={option.displayName}>\n            {option.displayName}\n          </option>\n        );\n      })}\n    </select>\n  );\n})`\n  margin: 1rem 0;\n  outline: none;\n  border: none;\n`;\n\nexport default SortSelect;\n","import { useEffect, useState } from 'react';\n\nconst useDebounce = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import { useState } from 'react';\nimport { useSearchProductsQuery } from './graphql/queries';\nimport { PAGE_SIZE, SORTING_OPTIONS } from './constants';\n\nimport Header from './components/Header';\nimport Pagination from './components/Pagination';\nimport SearchBar from './components/SearchBar';\nimport Container from './components/Container';\nimport Spinner from './components/Spinner';\nimport NoResults from './components/NoResults';\nimport ResultsGrid from './components/ResultsGrid';\nimport FacetList from './components/FacetList';\nimport ProductList from './components/ProductList';\nimport SortSelect from './components/SortSelect';\nimport useDebounce from './hooks/useDebounce';\n\nfunction App() {\n  const [term, setTerm] = useState('');\n  const [skip, setSkip] = useState(0);\n  const [facetValueIds, setFacetValueIds] = useState<string[]>([]);\n  const [sort, setSort] = useState(SORTING_OPTIONS[2]);\n  const deferredTerm = useDebounce(term, 200); // useDeferredValue is not available in React 17\n  const { data, loading } = useSearchProductsQuery({\n    variables: {\n      term: deferredTerm,\n      take: PAGE_SIZE,\n      skip,\n      sort: sort.value,\n      facetValueIds,\n    },\n  });\n\n  const currentPage = skip / PAGE_SIZE + 1;\n  const totalPages = Math.ceil(data?.search.totalItems || 0 / PAGE_SIZE);\n\n  const handleNextPage = () => {\n    setSkip(skip + PAGE_SIZE);\n  };\n\n  const handlePreviousPage = () => {\n    setSkip(skip - PAGE_SIZE);\n  };\n\n  const handleSearch = (searchValue: string) => {\n    setTerm(searchValue);\n    setSkip(0);\n  };\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <SearchBar\n          onSearch={handleSearch}\n          term={term}\n          placeholder=\"Search Products\"\n        />\n        {loading ? (\n          <Spinner data-testid=\"spinner-product-results\" />\n        ) : data?.search.totalItems === 0 ? (\n          <NoResults>\n            No results found for <strong>{term}</strong>\n          </NoResults>\n        ) : (\n          <ResultsGrid>\n            <aside>\n              <label>\n                <strong>Sort:</strong>\n                <br />\n                <SortSelect sort={sort} setSort={setSort} />\n              </label>\n\n              <div>\n                <strong>Filters:</strong>\n                <FacetList\n                  facetValues={data?.search.facetValues || []}\n                  facetValueIds={facetValueIds}\n                  setFacetValueIds={(ids) => {\n                    setFacetValueIds(ids);\n                    setSkip(0);\n                  }}\n                />\n              </div>\n            </aside>\n            <main>\n              <ProductList items={data?.search.items || []} />\n              <Pagination\n                currentPage={currentPage}\n                totalPages={totalPages}\n                handleNextPage={handleNextPage}\n                handlePreviousPage={handlePreviousPage}\n              />\n            </main>\n          </ResultsGrid>\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: Open-Sans, Helvetica, Sans-Serif;\n  }\n\n  strong {\n    font-weight: bold;\n    line-height: 1.5;\n  }\n`;\n\nexport default GlobalStyle;\n","import {\n  ApolloClient,\n  ApolloLink,\n  createHttpLink,\n  InMemoryCache,\n} from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport GlobalStyle from './globalStyles';\n\nconst commerceLink = createHttpLink({\n  uri: 'https://demo.vendure.io/shop-api',\n});\n\nconst addAuthHeader = new ApolloLink((operation, forward) => {\n  const token = localStorage.getItem('Auth-Token');\n  if (token) {\n    operation.setContext({\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n  return forward(operation);\n});\n\nconst afterwareLink = new ApolloLink((operation, forward) => {\n  return forward(operation).map((response) => {\n    const context = operation.getContext();\n    const authHeader = context.response.headers.get('Vendure-Auth-Token');\n\n    if (authHeader) {\n      localStorage.setItem('Auth-Token', authHeader);\n    }\n    return response;\n  });\n});\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([afterwareLink, addAuthHeader, commerceLink]),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <GlobalStyle />\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}